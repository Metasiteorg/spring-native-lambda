plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.graalvm.buildtools.native' version '0.10.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:2.0.2'
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'
    implementation 'com.amazonaws:aws-lambda-java-events:3.14.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.springframework.boot:spring-boot-testcontainers"
    testImplementation 'org.testcontainers:mongodb'
    testImplementation "org.testcontainers:junit-jupiter"

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'org.springframework.boot:spring-boot-starter-tomcat'


    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'

}

tasks.register('buildZip', Zip) {
    from compileJava
    from processResources
    into('lib') {
        from(configurations.compileClasspath)
    }
}

tasks.register('buildNativeZip', Zip) {
    from nativeCompile
    from "src/main/shell/bootstrap"
}

tasks.named('test') {
    useJUnitPlatform()
}
